so we continue with our discussions about ah the different protocols that are used forcommunication ah and networking of ah internet of things ah um so the next protocol thatwe are ah going to cover is the coap protocol and the full form of which is constrainedah application protocol and ah this protocol is particularly used for web transfer ah andweb transfer ah um a ah i mean very similar to ah the http ah but web transfer in thecontext of constrained networks resource constrained networks ah with nodes which are constrainedwith respect to different resources such as ah limited a energy or power supply a limitedah computational resources limited ah communication resource limited bandwidth environment andso on so coap is sort of like an http equivalentah that can be used in the context of iot and ah the other ah thing that we have toah understand is coap is strictly speaking a session layer protocol ah however we canalso contribute ah as a as an application layer protocol as well ah um so in iot particularlywhen we taking to consideration ah the different applications involving machine to machinecommunication for example smart energy smart environment you know building automation andthis kind of applications coap comes out to be very much usefulah coap is based on a request response model uh and ah so basically you know so ah it willvery clear ah shortly about how coap works ah so at this point you know you have to understandthat there are two endpoints the source and the destination and ah a request is sent anda response is ah received back from the ah in the other endpoint that means the destinationso this is how coap works and ah um ah so there is sort of like a client server kindof interaction that goes on ah um and ah so there is ah ah the datagram that is sent ahah ah ah from ah one ah one endpoint to another and ah that ah so basically it is an asynchronouskind of communication ah um and it also works ah on top of in the transport protocol ahudp ah so basically coap we have to keep in mindah that coap works on top of udp so ah um this particular protocol ah um is ah basedon ah the ietf ah restful environment working group ah and so there is a rest architecturerestful architecture and ah this people who have to post the restful ah architecture ahso they have ah proposed the coap protocol and ah um so ah so it is basically ah usedah sort of like a lightweight equivalent of ah the http and ah um its a standard ah umrest ah so so rest basically so let us go back to the rest protocol first so rest isa standard ah ah interface ah between the http clients and ah servers ah but this restprotocol ah is useful ah where there is no resource limitation because you know thisis quite resource hungry kind of protocol which communes lot of resource rest basicallyis not good for ah constrained ah environments like iotso ah so so coap is sort of like a ah you know ah so sort of like an in ah protocolwhich is ah a lightweight equivalent of ah the rest ah architecture and ah rest protocoland it ah helps to communicate with ah under low power constraints ah so this is how coapworks so as i was telling you that its a session layer protocol or even we can think of itas a as an application layer protocol so ah so it it basically works on top of the transportlayer so session layer or application layer are on top of the transport layer and thetransport layer protocol that is used in the context ah of ah coap is that udp and ah umso coap basically has two main sub layers one is the messaging sub layer the other oneis the request response sub layer and i will show you a pictorially how it looks like shortlyah so but ah ah in in summary actually ah at a high level we can think of the messagingsub layer to be responsible for functionality such as reliability and duplication of ahavoidance of duplication of messages when the request response sub layer is responsiblefor ah the communication exact communication that is going to take place the request beingsent and the response being received so these are the two main sub layers that are therein the coap protocol and the coap architecture more specifically so there are different messagingmodes for coap one is the confirmable mode the second is the non confirmable mode thethird is the piggyback mode and the fourth is the separateso as i was telling you in the protocol stack in the in terms of the layered architecturecoap is a protocol of the session layer some can also think of it ah you know in some caseswe try to avoid the session layer so in that case we can think of coap to be merged withthe application layer but if session layer is considered it is a protocol of the sessionlayer so session layer means that it lies between the transport layer and the applicationlayer so at the ah at the transport layer we have the udp protocol and different applicationsbeing run ah in the application layer and coap basically sits in between so we havetwo sub layers one is the request response the other one is the messages messages isah mostly concerned about the reliability in sharing reliability of the network a reliabilityin communication whereas request response is more to do with the exact communicationin terms of sending a request and getting a response backso this this is what i was mentioning earlier so we have different types of messages ahthat are used ah in coap ah the first one is the confirmable message the second is thenon confirmable message the third is the piggyback message and the forth is the separate messageso basically when we look at coap confirmable message this is how it works so we have socoap is basically its a connection between the client and the server in a resource constraintenvironment so what happens is a message is sent and an acknowledgement is received inthe case of a confirmable message so this message basically you know its getsan acknowledgement back so its a confirmable message then for non confirmable message thereis no acknowledgement from the server and then we have the piggyback message which isused for a client server direct communication where the server sends its response directlyafter receiving the message so that basically you know what happens is along with the acknowledgementmessage the data is also sent the response is also sent in the case of piggyback messagesand in the case of the separate mode it is used when the server response comes in a messageseparate from the acknowledgement and ah that basically may take some time to be sent tothe server this particular message might ah ah ah you know because it is coming separatefrom the acknowledgement it might takes ah may be acknowledgement might be received andthe message ah might be received after a rewind backso ah no ah sorry find thereafter i am sorry and ah um so similar to http code basicallyutilizes ah different functionalities such as get functionality get message put messageah ah push message delete message etcetera so basically get is for retrieval of a somedata put is for ah creation ah um ah so you want to put some ah data ah ah or some somemessage into ah the repository so in that case push ah or or the server so in that casethat put ah ah message is used and ah then we have ah ah um ah then we have the updatefor that the push is used and the delete message is for deletion purposeso we have already looked at how the confirmable and the non confirmable message request responselooks like so let us now look at pictorially how the piggyback message request responsemodel looks like so here basically as we can see first a message is sent in piggyback incontrast to the previous two models that means the confirmable and the non confirmable modelsrather the confirmable model so what we have vary as we can see the the data is basicallypiggybacked along with the acknowledgement data is piggybacked along with the acknowledgementmessage ok so this is how the piggyback message request response model functionsseparate message we have ah a ah a message being sent and acknowledgement being receivedand there is a wait period after which the the data is going to be sent separately fromthe server to the client and corresponding to that the client is going to send an acknowledgementback to the server so this is how separate messages look like so these basically coapas a whole and these different message types they together they help to induce the overheadand the parsing complexity of the network so there are different types of ah discoveryof resources ah that are supported ah by coap and ah we are going to ah ah go through themlittle bit ah further ah but ah ah um ah so ah ah so so we now start with the xmpp ahum protocol which is the next protocol to be discussedxmpp the full form of xmpp is extensible messaging and presence protocol so its a message orientedmiddleware that is based on xml however whereas xml is particularly used for unstructureddata xmpp is useful for real time exchange of structured data and it is an open standardprotocol so xmpp uses a client server architecture it uses a decentralized model meaning thatthere is no server that is involved in the message transfer and it provides facilitiesfor discovery of messages which are residing locally or globally across the network andthe availability information of these services so as we can now ah basically ah think aboutit so it is well suited for cloud computing environments where virtual machines networksand firewalls are involved and would otherwise present obstacles to the alternative servicediscovery and message based solutions so you know think of it this way that ah with thehelp of xmpp we can do things very similar to like the pin protocol so in the case ofpin basically you know when we have ah you know the involvement of firewalls etceteraetcetera so pin ah cannot ah be used as such rightso ah in this particular case in the case of xmpp ah it basically removes all theseconstraints these barriers ah for ah ah ah for ah having the discovery of the servicesand if it is the discovery of services locally then it is no problem but if it is acrossthe network and there is a ah there is a firewall ah in between so xmpp can still work so someof these highlights of the xmpp protocol ah it is based on the concept of decentralizationwhere there is no central server and then you know everybody can run the xmpp servertheoretically and it is based on open standard so there is no involvement of royalties orgranting permissions to implement the xmpp specifications different security featuresthat the standard ones such as authentication encryption etcetera can be implemented usingxmpp on top of xmpp rather and xmpp also offers flexibility in terms of supporting interoperabilitybetween different systems different devices different protocols and so onso consequently i was giving you the analogy with the traditional pin protocol that isused for internet and here we are trying to have something similar but ah ah you knowit is ah ah big different ah in this particular manner so it is ah now if you look at thisparticular figure for pc is ah with the help of xmpp not only it is possible to communicatewith other servers like in the case of the traditional internet but also with other messagingplatform such as icq aim yahoo and so on so this is also possible so not only that thisis possible this is also possible but additionally it is also possible to communicate with otherintranets other intranets so xmpp basically helps in doing this thereare few core xmpp technologies one is the core technology which provides informationabout the core xmpp technologies for xml streaming then we have jingle which is used for multimediasignaling with with the help of voice you know wherever there is multimedia resourcessuch as voice video file transfer etcetera it can help in signaling jingle multi userchat it is a flexible ah ah ah technology which can be used for multi party communicationpubsub is publish subscriber publish subscribe model and publish basically alerts ah thispubsub model basically alerts and notifies ah for data syndication and the bosh technologyit is used for http binding for xmpp wherever there is required meant for ah http bindingwhen using xmpp this can be used there are different ah weaknesses as wellof xmpp protocol it does not support qos text based communication ah ah including ah youknow higher network overheads are involved ah in the in the use of xmpp so it is notgood for text based communication and binary data must be first encoded to base sixty fourbefore it can be transmitted the different applications that use xmpp publish subscribesystems pubsub systems then signaling for voip ah video file transfer gaming applicationsiot applications such as smart grid social networking and so onso with this we have come to the end of ah two order protocols we have discussed ah thattwo order protocols and ah so xmpp is a protocol that is when ah useful so we have discussedabout the core protocol first with the session layer protocol which is useful for use ina similar kind of platform where rest is required for communication between the client and theserver so core protocol and then we have discussed about the xmpp protocolthank you