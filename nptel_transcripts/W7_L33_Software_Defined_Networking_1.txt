we are going to discuss a very important technology the software defined networking in short itis called as sdn and its a very important technology ah which has lot of potential foruse ah in internet of things for making iot efficient so we will discuss about the basicsof sdn first what ah software defined networking is and some of the basic concepts that surroundssdn and thereafter in another lecture ah we are going to discuss about how sdn can beused for ah ah in the context of iot to make iot efficientso when we talk about sdn its about transforming or restructuring the existing network infrastructureand that can be done in an efficient manner so how that can be done is what we are goingto discuss now so if we look at the current day networks this is what happens so we haveusers different users connected to the network enjoying network services and this can beany network you know we are talking about sdn in a general network a wired network latus say a very simplified wired networknow let us say that the topology of the network is something like this so this is the topologyof the network so what we have are different l three switches like this and maybe the datahas to be sent from user one to user two and back so the data can be sent in differentways different you know so these are the routes through which the data can can traverse fromthe user the data can traverse maybe one of the possible routes is like this to the usertwoanother possible route is may be like this and another possibility is like this and thereare few other possibilities also for the data to be sent from user one to user two so wehave multiple different routes and the data or the packet basically traverses throughmultiple switches l three switches and this is how it looks like so before i proceed furtheri would like to mention that in this particular lecture and let that means lecture on sdnand sdn ioti am going to use the terms switch and router interchangeably so when i mention about switchand basically talking about the l three or the layer three switch and so l three switchand router these terms are going to be used interchangeably in the sdn lecture so letme just ah you know let us look at the slide once again so what we have is a scenario likethis and then let us say for switching or routing the protocol that is used is the ospfprotocolso what essential happens is every switch is going to every switch over here its goingto implement os pf so it executes ospf and so when the data is sent you know the ospfpf protocol is going to the packet is sent the ospf protocol is going to route the packetah through these corresponding switches depending on which route the ospf protocol finds tobe the bestso what essentially happens is every switch basically knows how it has to send the packetbased on the routing table that it has so it doesnt have a global view of the networkas a whole now let us say that a particular switch the one that is shown in this particularfigure this one let us say that it becomes down for one reason or another maybe becauseit has been attacked so let us say that it has been attacked and the switch is downso then traditionally what has to happen is a new route or an alternate route has to befound for the packets to be sent from the source to the destination node and becausethere is no centralized control so you know this becomes a difficult task so so so whathappens is at present the technology the routing technology is such that there is no centralizedcontrol over the networkso if one switch becomes down the other switches can will become affected and there is no centralizedway that we can address this particular problem so there are different ways to read out youknow found find routes depending on the protocols you know what are the alternate route so onbut there is no centralized solution there is no centralized entity that can take careof itso these are the limitations of the existing network and if we look at this network youknow a so what we see over here is just a snapshot of a very simple network ah consistingof different switches and each of these switches they run these different layers we have ahardware then we have the operating system and we have the applications that are runningon topso essentially a very skeletal view of the stack that is run on each of these switchesis hardware os and app and that is basically applicable to all these switches that arethere in the network so each of these switches is running these three different layers nowthese switches they forward the traffic in a distributed manner and they do not havethe global view of the network this is what i was mentioning in the previous slide aswellso each of these switches they do not have the global view they route the traffic theyforward the traffic in a distributed fashion they just know locally what you know whathas to be done so if we now summarize the present network has different limitationslimitations which are for example the architecture of these switches are vendor specific andcorrespondingly you know if we have to do any dynamic configuration based on the applicationspecific requirements that we cannot do very easily so that cannot be done in a dynamicway dynamic configuration cannot be doneswitches are required to configure according to the installed operating system in eachof these stacks so each of these switches they run their different operating systemand they have to be this way they have to be configured according to that particularoperating system and there is no centralized control that is feasible in these networksthere is no centralize controller so if we look at another view point of thesecurrent networks so we have each of these switches running thousands of lines of codethey have each switch has millions of gates logic gates that are implemented ah requiringmore than ten gb of ram they are cost expensive each switch is cost expensive and they rundifferent ah you know applications for example routing mobility management etceteraso here basically you know so we are not talking about you know when when we mention aboutapplications we are talking about the different application functionality ah and not simplythe applications that we used to refer to in a osi model so here we are talking aboutapplications in general so like the general network applications like routing mobilitymanagement etceteraso so this is the challenge with these networks so each of these ah you know networks ah ahyou know these each of these switches in this networks the have specialized packet forwardinghardware they have their own operating system and they run their own different applicationswith respect to routing mobility management and so on and so forthnow what is required is to make these networks efficient by trying to overcome these challengesor the limitations that we have just gone through so the whole idea in sdn is to takecare of the limitations by separating the application and operating system from thehardware so earlier in the earlier view what we had seen is the app os and hardware werehold or were all put together in each of these switches and here what we are doing is weare separating the application and operating system from the hardware in each of theseswitches so hardware is separated out from the app and the osso what we will have is the packet forwarding is going to be packet forwarding is goingto be separated out from the os and applications so before we look any further into sdn solet us try to look at the history the brief history about the genesis of sdn so in theyear two thousand six a stanford university team proposed a clean slate security architecturewhich was termed as sane to control the security policies in a centralized manner instead ofdoing it at each of these edges that means each of these switchesin two thousand eight the idea of software defined network was originated with the openflow project and that was published in the very popular acm sigcomm paper in two thousandeight in two thousand nine stanford basically published the open flow version one specificationsand june two thousand nine the nicira network company was founded in march two thousandeleven the open network foundation was formed and in october two thousand eleven the firstopen networking summit and many industries for example all these routing ah router companieslike juniper cisco etcetera they basically announced that they want to incorporate sdninto their switchesso basically it the the whole ah ah concept of the the sdn technology goes back to onlya few years back that means in two thousand six so its not a very old thing is very newah and we will see that how what are the different features of sdn further in the next few slideswe are going to look at what are the different features of sdn open flow is sort of likea de facto protocol or and architecture that is used for sdn so both of these are not thesame but open flow basically follows you know open flow is used for sdnso let us now look at this particular architecture so what we have you know let us say that eachwe have different switches which perform forwarding individually so that is the data plane andthen we have the control plane which has the network operating system and then the applicationplane performing functionalities like security routing ah traffic engineering and differentother applicationsso the whole idea behind sdn and this sdn architecture as a whole is to separate thedata plane from the control plane or other the control plane from the data plane so yousee that the control plane has been separated in sdn this control plane has been separatedin sdn from this data plane which takes care of things like forwarding so this is madepossible they the concept of sdn is made possible through the process of network function virtualizationnfvso this network function virtualization so what happens if these different network functionsfor examples you know ah ah security routing etcetera etcetera these have been these havebeen ah you know these these are performed on a virtualized networks so this networkfunction virtualization basically gives a logical view of the network and based on thatthese functions are performedso one more concept i should mention over here before we proceed further is so we havethree different planes in sdn ah ah in the you know in the sdn architecture we have thedata plane control plane and application plane and we have also seen that the data planeand the control plane are basically d coupled in sdnnow we have the concept of northbound api and southbound api so the northbound api isbetween the control plane and the application plane so this particular interface is knownas the northbound api in sdn and this particular interface between this forwarding that meansthe data plane and the control plane this is known as the southbound api and the currentprotocol supporting this southbound api is the open flow protocolso now let us summarize some of these basic concepts of sdn the whole idea is to separatethe control logic from the hardware switches to define the control logic in a centralizedmanner so the everyday all this control functions are going to be centralized figure this controlplane has been separated out and is centralized so you know so this is how this sdn is goingto work so the control logic is going to be centralized and is separated from the datalogic the data planecontrol in the other concept of sdn is to control the inter network including the individualswitches in a centralized manner and the communication between the application the control and thedata plans are done through different apis northbound apis southbound api so we havedifferent components or attributes of sdn we have hardware switches we have controllerapplications flow rules and different application programming interfaces or the api these arethe different components of sdnnow the current status of sdn are companies big big companies joined companies like sdnwho have their own data centers they have started to implement sdn in their own datacentre networks sdn it is required to change the current network with sdn in a phase manneryou know it is not like you know we can go and we can change the existing network wecan transform the existing switches to support sdn it is not so simple you know i has tobe architected the hardware have to support the software have to support and so onso these has to be done in a very progressive manner in a very phased manner you know stepby step it has to be done operation cost and delay that are caused due to link failurecan be significantly minimized using sdn now it is come to two main challenges when wewant to implement sdn in any network so these are the rule placement problem and the controllerplacement problem so these are the two main problems to be taken care of fundamentallywhen we talk about sdnso with respect to rule placement what happens is here we are talking about flow tables insteadof routing tables in the concept of sdn so these flow tables so basically what happensis this flow tables have different flow rules which are implemented in the same way as traditionallythese routing tables have their routing table entries you know different entries in therouting table very synonymously analogously we have flow rules implemented in this flowtableso so these switches basically in the network they forward the traffic based on this flowrules and this flow rules are basically defined by the centralized controller and this controlleras we can recall doesnt exist in each of these individual switches controller is centralizedyou know it is separated out typically implemented you know the controller side implemented asthe serverso from a server this controller is implemented and these controllers basically takes careof this flow rules defining the flow rules based on which the strings of packets thatare coming to each of the switches this flow rules are going to determine what is goingto be done with the streams of packets that are arriving at the switches so we are goingto talk about that ah aha you know in further detail in a short whileso each rule has a specific format and that is defined by a particular protocol and currentlywe are talking about open flow which is sort of like a defector protocol that is used forimplementing sdn so you have the rule placement issue so you know here what we see over herein this slide is an example of a flow rule that is based on the open flow protocol soyou know essentially what we see over here is if a packet arrives then it will checkthe priority if the priority matches maybe in a star means that you know it is it itdoesnt require any matchso you know if the values of the packet corresponding to this particular fields are different itdoesnt matter but the protocol has to be tcp and if the ip destination is this and thedestination port is this then the instruction that means the action that has to be takenis to forward to the particular port so here it is forward to port one like this the otherflow rules are given over hereso for different priority and these things can be anything if the ip destination is thisand the you know the source port and the destination port can be anything then forward to porttwo and so on and so forth for the other entries so these are the different flow rules andthis fields basically you know we have to remember one thing so these fields are fixedthis particular fields in open flow these are fixed no one cannot go and change thisfield and of one changes then we have a different protocol so in open flow this field cannotbe changedso this you know so when we place these rules they are placed in the open flow table theflow tables and this flow tables are basically stored in in the switches the size of theiryou know ah the size of these flow tables are such that they have to be stored in aspecialized memory which are known as a tcam memory ternary content addressable memoryand these memories are very limited in size and so that only a limited number of rulescan be inserted in this flow tables and so basically the flow tables are residing inthis tcam memories and this tcammemories are very fast that means fast processing can bedone that is why the specialized memories are requiredwe cannot use any other memories that is at normally available in the switches and othercomputing hardware and we have to use this tcam memory at the switches and this tcammemory they are very expensive as well they are very expensive so you cannot you knowvery easily you cannot scale up we cannot you know get as much memory as we want becauseof the cost for nessso on receiving a particular request for which no flow rule is present in the switch so whathappens is the switch basically sends a packet which is called the packet in so we have thisswitch switch receives a request and it checks its flow table if there is no flow rule thatis present in this particular switch in that particular table the switch sends the packetin message to the controllernow this controller besides a suitable flow rule for this particular request and thisflow rule is then communicated back to the switch and then this flow rule is going tobe inserted in that portable in the switch and typically there is a delay of thee tofive milliseconds involved in the new rule placements so whenever there is a new rulethat has to be placed in the switch which is which is not already existing in the portablein the switchthis entire communication with controller controller deciding and sending back the flowrule this takes about three to five milliseconds delay so one of the challenges is how to defineor place the rules at the switches while considering the availability cam i already mentioned toyou that tcam is very small in size and it is very expensive it is not very easy to skillskill upso how do we define one of the problems is to define or place the rules at the switchesthe other problem is how to define the rules so that less number of packet in messagesare sent to the controller and these are challenges that people the researchers are working onat present defining solutions to these specific problems so in the open flow protocol ruleplacement is done it is one of the vital things only one protocol is available for this ruleplacement which is the open flow protocoland it has different versions one dot zero one dot one one dot two one dot three openflow has different versions and they have different number of matching field but ina particular version of open flow this fields are going to be fixed so there are differentmatching fields source ip destination ip source port priority etcetera in a particular versionof open flow and that these fields are fixed as i already mentionedso one of the issues is that for how long a particular flow rule that is generated isto be kept in the switch for for this there are two times time outs that are defined oneis known as the hard time out the other one is known as the soft time out so all the rulesare deleted from the switch at a particular hard time in the hard time out methodologythis can be done by resetting the switch for example and in the soft time out methodologyif no flow is received associated with a particular rule for a timeout interval of time then thisparticular rule is deleted so this is the soft time outso we have to remember one thing that i was also briefly mentioning at the outset of thislecture is that sdn and open flow are not one and the same sdn is a technology or aconcept open flow is a protocol that is used to communicate between the data plane andcontrol plane so they are distinct and we have to understand and remember this particulardifference between these twonow these open flow switches are implemented ah in sorry open flow is implemented in differentswitches there are different software that have to be that are associated to with openflow implementation here is a list of these different software i am not going to go throughthem most of them are open source and they run on different platforms ah ah differentways for example linux solaris windows etcetera etcetera indigo linc pantou open vswitch theseare some of the popular open flow switch software that are available currently to support openflowso to summarize we have gone through the basics of sdn we have understood the architecturefor sdn we have also understood that in sdn the whole idea is to separate the controlplane from the data plane and there is a centralized controller which is typically implementedin a server that takes care of the control logic that has to be implemented while anyflow in any flow is received at each of these different switches of the routersso the rule placement is an important problem that we have talked about and there are differentissues with the rule placement and another very important problem is the controller placementproblem and this is what we are going to discuss in the next part the second part of the sdnlecture thank you