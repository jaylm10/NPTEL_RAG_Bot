hello in this third part of this implementation of iot with raspberry pi will be coveringthe topics we discussed in the previous two lectures that is integration of sensor witha raspberry pi then in the previous lecture that was integration of sensor the raspberrypi and making the raspberry pi ah configuring the raspberry pi as a client device and weconfigure another desktop pc as a server device and we initiate communication between thisclient and server and we also initiate storage of datawhen the data is being uploaded on to the server and thirdly in this part we will befocusing besides those previous applications will be focusing more on the server side thatis once the data has arrived what exactly can be done with the data so as we have coveredpreviously we are mainly focusing on creating an interactive environment using a networkof connected devices and the data logging being done is remote which is connected toa network and the data may be processed on the client side as well as it may be processedon the server side itselfagain ah going through the system overview as you can see we will first start off witha network of temperature and humidity sensors connected with raspberry pi board for thisdemonstration we have connected only one sensor to a single raspberry pi we read data fromthat sensor we send it to a remote server over the network received the data at theserverthen till this part we covered in our previous lectures over here we will be doing all thesethings and after that we will be splitting the data which we saved in the data logs andwill try to create a running plot of the data which is coming into the server so imagineregarding this running plot imagine your devices you have a network of devices spread overthe city and which are uploading data to a remote server and instead of running the scripton a local serverif this can be hosted on the internet you will be able to access your sensor readingssensor data you may be able to remotely actuator sensors or actuators or ah iot node from anypart of the world and you may be able to visualize the changes in the environment in a particulararea to which the node is deployed by accessing the whole system through the internet or througha browserso again back to this topic for this remote data logging we will be using ah the dht sensorand raspberry pi the pin configuration pin one is connected to power pin four to groundand pin two is connected to the data pin the raspberry pi interface is the same as beforeonly changes pin two of dht is connected to pin eleven of the raspberry pi so we alreadyhave the adafruit python library for this dht sensor and we have all the libraries installedas covered in the previous lectures the code is also similar to the previous lecturesso on the left hand side you can see this is a screenshot for that iotsr dot py fileand on the right hand side will be getting the output once this file is run on the raspberrypi ah you must remember this iot sr dot py file is kept on the raspberry pi and whenyou remotely run this file it will generate a temperature and humidity value so this willbe on the client device itself sorry this will be on the sensor device itself whichis the raspberry pi we cannot call it a client yet because it has not been connected to thenetwork as of nownow when we attempt to connect this over the network we create a client server architectureand establish connection between one client device and a desktop which acts as the serverdevice and once the data transmission from the client initiates successive data willbe in coming into the server and get stored into a log file now till the previous slidewe had covered all these things in details in lecture twoso over here will be going through those as well as a basics of data processing like datasplitting and filtering and data plotting but big question is why do you need processingof the data as in imagine you have hundreds and hundreds of sensors all rapidly uploadingtheir data to this remote server so at certain instances there maybe chances of data corruptionthere may be chances of ah incomplete data being transmitted there maybe chances of servernot able to receive the whole data despite the client beingsent client sending the wholedataso there may be various reasons that data may not be properly formatted and so on soin those cases you need to filter the data to create a seamless and well structured database and as regards to data splitting since you have multiple data coming in from a clientah which maybe ah stored in the form of a csv file or even in the form of a text fileso we need to if we need to access individual datasuppose you are getting temperature readings humidity maybe presence of gases light intensityand so on so suppose you have five to six sensors connected to a single node and thesedata are routinely updated to a server but you only need to access the temperature valuefor this to happen you need to split your data at the data log and once this data hasbeen split and individual data can be accessed we can go about plotting this dataregarding this data splitting now imagine the data from the client is saved into a textfile and the values are separated by a comma as we have covered in previous lectures thisis called a csv or comma separated value file so instead of a comma you can use any otherdelimiter it may be a semicolon it maybe colon it maybe even a question mark better avoidedbut still so these values which were incoming it were in the form of string h commastringtso we need to split these values on the server in the form of individual h and t s so wewill be using this basic inbuilt function of python called split so it can be used tosplit a string into multiple strings depending on the separator or the delimiter we are specifyingfor example suppose we take a data string as within single quotes we assign sunday commaMonday comma tuesday or it can be any other data string separated by a delimiter overhere the delimiter is this comma we have chosen this is a commanow when we call this data dot split function and we specify the delimiter in the argumentsyou will see the result will be individual substrings sunday monday tuesday we inputthe data as a single string sunday comma monday comma tuesday but we get the output as individualdata strings so it would be better if we just do a bit of of hand on so let us suppose ourdata is maybe one two three comma abc rightso i have given one one two three numeric value i have given abc alphabetical valueand i have given a combination of both alphabets and numbers so this is my data lets checkwhat has been stored so this has been stored this data variable has been assigned a singlestring that is one two three comma abc comma xyz one two now i need to split this dataso i use data dot split the separator i have used is a commayou see it has been split into three different parts one two three abc and xyz one two youmust remember since these were separated by comma so these have been separated accordinglyyou can obviously go for another value let us say data equal to one two three four threetwo four five foura bc four so i have used to many fours let us see what happens so thisis my data rightnow i will use the number four as my delimiter so data dot split i will give the delimiteras four you see so according to the position of four in the string your single string hasbeen broken down into multiple substrings and the four delimiter is obviously not includedso you have one two three then you have three two then you have five then abc then a blanksince it has two force so it includes a blank and then rt right so its quite simplenow regarding data plotting in matlab so matlab ah sorry regarding data plotting in pythonit is quite similar to plotting the data in matlab so both of these support a very powerfullibrary called matplotlib so this matplotlib library you can use the appropriate versionin matlab as well as in python most of the functions are almost same with a bit of variationsbut its more or less same in both the languagesso basic commands for plotting in two dimension are you write plot x comma y where you putthe x axis and the y axis values x lable gives ah provides the labels on the plot for thex axis y label provides the label on the plot for the y axis title gives title to the wholeplot so this is a sample code import matplotlibdot pyplot as maybe a variable and then you callthis myplot dot plot you give a range of values then myplotdot y label you name it y axisand you show this plot so we can again go for a bit of hands onlet us saywe import this matplotlib function as let us say plt we define a variable as may bei will give a range of values may be from one to twentyplt dot plot i put in a plt dot show so when i run this basic code see what i have doneis i have imported this matplotlib dot pyplot library i have defined a variable a by assigninga range of values between one and twenty so this range function automatically assignsvalues lets see what it does range one comma twenty so it will give you range of valuesbetween one to twentynow we initialize this plotting by calling a figure within this figure we plot this valueof a which will be obviously corresponding to the y axis the x axis is if not providedit is automatically taken and the show function shows the plot so once we run this thing asyou can see this plot has been generatedsince it is a linearly increasing line one two three four upto nineteen so we will giveyou a straight line you can even change the plot type let us say instead of plt dot plota straight line plot lets go for a scatter plot sorry better still it will be more interestingif we give two values assign a variable one as for this we have to import this randomfunctionif you see if you remember in one of the previous lectures this random function was also coveredwe need to import the random function first sorrystarting and endingso whenever you are in doubt for this particular spider base console evenactually checking the syntax of this function or you need two arguments a and blets say i give a as one b astwenty and put this whole thing within rangeso this will be my range i will start with this i will change this to length of a oneif it is denoted by len a one when i run these two together so a one is zero to five a issixright sorry this is going to be only scatter so this seems to be a size mismatchso for this scatter plot we take two arguments one forx another for y and we have used twofunction for the x one we need a linear spacing of numbers so we started off with minus onebecause this wont be included it will go up to fifty with a step size of one so you willhave zero one two three four five six upto fiftyso you have fifty points on the xaxiswhere as we call a random function from numpy library module lets call it import numpy asnpso on this numpy module we wont be requiring this so np dot random dot random number withinargument fifty means it will generate fifty random point so this will act as my y axisor the data points so corresponding to the points on the x axis will have correspondingrandomly generated points on the y axis and within this same figure and show lets seewhat happens and we run this thingso you see on the xaxis and corresponding to the xaxis you have fifty points on they axis so lets add a few bits to itif you run this part you just added a title for this plot you see this scatter plot exampleadditionally you can have plt dot y lable you must remember these labels are stringsso should be within quotationslets put the y label as randomly generated the x label as linearly spaced lets run thisyou see the y label has changed to randomly generated the x label has changed to linearlyspacedyou just add one more command to it if you add this command it will show a itwillturn up a grid on your plot so you have a linear grid on your plotso i hope this basic plotting function is clear so you have a simple plotting you havelabeling you show this plot and besides your normal two d plot line plot and scatter plotyou have a huge range of plotting option you can even venture into three d plots whichare much more attractive in a browser base system or for various publication so thisbasic plotting you saw previouslynow some other functions used in plotting are covered this figure it creates a new figuregrid it enabled or disabled an access grid on the plot ion is the interactive plot modethis is generally used for animations your subplot it adds a subplot in the figure closeit closes the current figure scatter makes a scatter point plot of the given points sowill try this small so it would be better if we directly gointo this model againso if you remember for the clientside this sensor data module is more or less same infact it is the exact same one the client doesnt require a ip address because we are aimingfor a one way communication from the client to the server so we just put in the serversip address and that required port to which on which the server is listening and justlike before we are packaging the data in the form of h and t and transmitting it over thesocket to the servernow on the server side we have added a new function called coverage plot what it doesis it animatedly plots whatever data is in coming into the server over the socket sofor the time being ignore this part this particular function lets pay attention to this socketcreation so it is somewhat similar to the previous examples over here your server addressis the server address and the particular port to which the server is listening and whileit is true it is receiving data in four zero nine six bytes junks you open a data log filestore the data to it and additionally call this plotting functionso this plotting function is being called again and again basically iteratively withinthis loop so as long as your data is incoming this plotting function will keep on goingso once the server is closed by the user or the client is closed by the uses this plottingfunction will stop so and this i plus one this keeps on incrementing this normal counterwhich we sent to the coverage plotcoming back to the coverage plot it accept two arguments one is the data which comesfrom the server and i which is the counter now the data is being split in terms of twoparts humidity and temperature so after splitting since the data was in a csv format so aftersplitting the zeroth element becomes humidity and the first element is temperature so youneed to actually study the data very carefully like what format the client is sending a dataand so onnow if you want to print the temperature you just print the temperature and the iterationnumber then you start the interactive plot mode you set the figure two similar numberas number one otherwise it will keep on creating new windows every time it plots somethingnew to set the window to ah six comma six it can be eight comma eight its up to theuser actually you give the plot a title you add a subplot to it and just basic you plotthe temperature versus the iteration that is ah normal temperature plot with respectto whatever data is incoming we label itsimilarly for the humidity part also you iteratively plot the data against i and eventually ahshow the data and figure dot canvas dot draw it redraws the image without overwriting theprevious parts so your output will be something like this so this will be on the raspberrypi this is the client code and on the server side you will be getting your data as yourcovered in the last lecture and for the plot you will be getting something like this leftone side is the temperature plot the right one side is the humidity plotso lets look at the plots first of all i will start my server so this desktop am operatingactsas my server so i will open up my server so my server code is now running now loginto the remote client and i need to run the client code which is the same as the previousone so one more point you need to notices is suppose you have hundred clients youdonot need to update each and every clienteven if you need some minor adjustments make some minor adjustments so you can just updatea singular source code or a singular script file on the server end and that will saveyou a lot of time as well as a lot of effort so i will run this client code client dotpy so you see client has started sending the data and on the server side it is receivingthe data this is a new addition this iteration numberso this keeps on increasing the left hand side denotes the temperature on the plot theright hand side denotes the humidity its maybe will stop the plot runthis thing again sosee even after stopping this program data which was previously stored maintains thereso there is very minute variation between ah seventy five point five and seventysixso it is giving changes where as the temperature is more or less constant so will try increasingthe temperature little bit and you can see the plot changingas you can see the temperature points now logged i raisingsee the temperature has risen and there have been changes in the humidityalso nowlets wait for it to recover now you can again notice the temperatures graduallycoming down on the left plot the red plot you can seethe temperature gradually coming down in stepsso this will keep on coming down until it reaches the normal room temperature valueso now lets close the client program see the client program has been stopped manually andthis data logging stops so one more thing you notice is in the previous examples yourtemperature humidity values were coming in concurrently now in this one since we havespitted the data over here in these parts so we have a separate temperature componentand iteration number and a separate humidity componentwhich is saved in the same data log data log is still the same only the scripting partis changed so this thing will help save you a lot of effort you dont need to individuallycode the clients so once your client has been coded and deployed on the field if you needto make changes make design your architecture in such a way that only changing the serverwill help you only changing the scripts on the server will help you change your wholeimplementation and functionality so i hope this was of some values to you thank you